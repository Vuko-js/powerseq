- samples for operators
- samples for enumerable methods
- new IX operators
- mapping operators for: JS Arrays, lodash, LINQ, RX/IX, F#, scala, Java?, 
- better doc (installation, wepack configuration, key features)
- explain wrap method


- http://blog.mgechev.com/2017/01/21/distributing-an-angular-library-aot-ngc-types/#checklist
-- 2 ways od bubdling; Distribute it in two directories OR Distribute the packages with esm and also provide ES5 UMD bundle.
-- package.json
{
  ...
  "main": "ngresizable.bundle.js",
  "jsnext:main": "ngresizable.module.js",
  "types": "ngresizable.module.d.ts",
  ...
}
-- but still problem because powerseq code is distributed as ES6 code, not ES5 with ESM


- check out swift sequence https://developer.apple.com/reference/swift/sequence






// - chodzi na ES6
// - https://github.com/ReactiveX/IxJS/tree/master/iterable
// https://github.com/Reactive-Extensions/Rx.NET/tree/master/Ix.NET/Source/System.Interactive
// - jak zrobic aby linq chodzilo w mongo shell ? modul UMD ? czy tam sa generatory ?
// -- generatory i lamby dzialaja, tylko jesli piszemy modulowo ES6 kod, to kod JS sie gubi w mongo shell nie ma modulowosc
// (pewnie jakos sprytnie trzeba wspoldzieli kod, ale miec 2 modulwosci; nalezy pamietac ze dziala JS to jedno,
// ale jeszcze musi dzialac TS)


// features:
// - leniwosc, kompatybilnosc z LINQ, IxJS
// - mozna korzystac z samych metod osobnych
// - mozna dodawac swoje metody
// - mozna na stronie osadzic tylko to z czego sie faktyczne korzysta
// - TS czyli wypowalnosc (w tym przeladowania, this, dynamiczne dodawanie metod, ...)
// - operatory nie korzystaja z siebie nawazajem